        val_input = tf.keras.layers.Input(shape=(60, 6, 4, 1), name='input')

        x = tf.keras.layers.Flatten()(val_input)
        x = tf.keras.layers.Reshape((60, 24))(x)

        x = tf.keras.layers.LSTM(512, return_sequences=True, activation='linear')(x)
        x = tf.keras.layers.Dropout(0.2)(x)
        x = tf.keras.layers.Dense(512, activation='linear')(x)

        x = tf.keras.layers.LSTM(512, return_sequences=True, activation='linear')(x)
        x = tf.keras.layers.Dropout(0.2)(x)
        x = tf.keras.layers.Dense(512, activation='linear')(x)

        x = tf.keras.layers.LSTM(256, return_sequences=True, activation='linear')(x)
        x = tf.keras.layers.Dropout(0.2)(x)
        x = tf.keras.layers.Dense(256, activation='linear')(x)

        x = tf.keras.layers.LSTM(256, return_sequences=True, activation='linear')(x)
        x = tf.keras.layers.Dropout(0.2)(x)
        x = tf.keras.layers.Dense(256, activation='linear')(x)

        x = tf.keras.layers.LSTM(128, activation='linear')(x)
        x = tf.keras.layers.Dropout(0.2)(x)
        x = tf.keras.layers.Dense(128, activation='linear')(x)

        val_output = tf.keras.layers.Dense(60, activation='linear')(x)

        self.model = tf.keras.models.Model(inputs=[val_input], outputs=[val_output])